#!/usr/bin/env python3
"""
Quick Enhanced Universal Framework v3.0 - Presupuesto Uruguay 2025-2029
An√°lisis optimizado para PDF grande con Reality Filter
"""

import pdfplumber
import json
import re
from datetime import datetime
from pathlib import Path

def quick_extract_key_content(pdf_path: str, max_pages: int = 20) -> dict:
    """Extracci√≥n r√°pida de contenido clave de las primeras p√°ginas"""
    content = {
        'key_articles': [],
        'budget_figures': [],
        'sections': [],
        'sample_text': '',
        'total_pages': 0,
        'processed_pages': 0
    }
    
    try:
        with pdfplumber.open(pdf_path) as pdf:
            content['total_pages'] = len(pdf.pages)
            pages_to_process = min(max_pages, len(pdf.pages))
            
            for i in range(pages_to_process):
                page = pdf.pages[i]
                page_text = page.extract_text()
                
                if page_text and i < 5:  # Solo guardar texto de primeras 5 p√°ginas
                    content['sample_text'] += page_text + '\n'
                
                if page_text:
                    # Art√≠culos clave
                    articles = re.findall(r'Art√≠culo\s+\d+[.-].*', page_text, re.IGNORECASE)
                    content['key_articles'].extend(articles[:3])  # Solo primeros 3 por p√°gina
                    
                    # Cifras importantes
                    figures = re.findall(r'[UY]?\$?\s*[\d,]+\.?\d*\s*(?:millones?|mil\s+millones?)', page_text)
                    content['budget_figures'].extend(figures[:5])  # Solo primeras 5 por p√°gina
                    
                    # Secciones
                    sections = re.findall(r'SECCI√ìN\s+[IVX]+|CAP√çTULO\s+\d+|T√çTULO\s+[IVX]+', page_text, re.IGNORECASE)
                    content['sections'].extend(sections)
                
                content['processed_pages'] = i + 1
                
                # Progreso cada 5 p√°ginas
                if (i + 1) % 5 == 0:
                    print(f"   Procesadas {i+1}/{pages_to_process} p√°ginas...")
        
    except Exception as e:
        print(f"Error: {str(e)}")
    
    return content

def analyze_uruguay_budget_quick():
    """An√°lisis r√°pido del presupuesto uruguayo"""
    
    print("üá∫üáæ ENHANCED UNIVERSAL FRAMEWORK v3.0 - PRESUPUESTO URUGUAY 2025-2029")
    print("üìä AN√ÅLISIS R√ÅPIDO CON REALITY FILTER")
    print("=" * 70)
    
    pdf_file = Path("/home/user/webapp/Presupuesto_Uruguay_2025-2029.pdf")
    
    if not pdf_file.exists():
        print(f"‚ùå No se encontr√≥: {pdf_file}")
        return
    
    print(f"üìÅ Archivo: {pdf_file.name}")
    print(f"üìä Tama√±o: {pdf_file.stat().st_size / 1024 / 1024:.1f} MB")
    
    # Extracci√≥n r√°pida
    print("\nüîç Extrayendo contenido clave...")
    content = quick_extract_key_content(str(pdf_file), max_pages=15)
    
    print(f"‚úÖ Procesadas: {content['processed_pages']}/{content['total_pages']} p√°ginas")
    print(f"üìã Art√≠culos detectados: {len(content['key_articles'])}")
    print(f"üí∞ Cifras detectadas: {len(content['budget_figures'])}")
    print(f"üìñ Secciones detectadas: {len(content['sections'])}")
    
    # An√°lisis con Reality Filter
    print("\nüéØ APLICANDO REALITY FILTER:")
    
    text = content['sample_text'].lower()
    
    # Variables cr√≠ticas detectadas
    variables_criticas = []
    
    # 1. Per√≠odo plurianual
    years_found = re.findall(r'202[5-9]', content['sample_text'])
    if len(set(years_found)) >= 4:
        variables_criticas.append("‚úÖ PER√çODO PLURIANUAL: 2025-2029 confirmado")
    else:
        variables_criticas.append("‚ö†Ô∏è PER√çODO PLURIANUAL: Verificar cobertura a√±os")
    
    # 2. Ajuste inflaci√≥n
    if any(term in text for term in ['inflaci√≥n', 'ajuste', '√≠ndice', 'deflactor']):
        variables_criticas.append("‚úÖ AJUSTE INFLACI√ìN: Mecanismo detectado")
    else:
        variables_criticas.append("üö® AJUSTE INFLACI√ìN: NO DETECTADO - CR√çTICO")
    
    # 3. Base temporal
    if '2025' in text and ('enero' in text or 'base' in text):
        variables_criticas.append("‚úÖ BASE TEMPORAL: Enero 2025 identificada")
    else:
        variables_criticas.append("‚ö†Ô∏è BASE TEMPORAL: Clarificar fecha base")
    
    # 4. Cifras significativas
    if len(content['budget_figures']) > 5:
        variables_criticas.append("‚úÖ CIFRAS PRESUPUESTARIAS: M√∫ltiples montos detectados")
    else:
        variables_criticas.append("‚ö†Ô∏è CIFRAS PRESUPUESTARIAS: Pocas cifras detectadas")
    
    # 5. Marco institucional
    institutions = ['ministerio', 'mef', 'opp', 'bcu', 'presidencia']
    inst_found = sum(1 for inst in institutions if inst in text)
    if inst_found >= 2:
        variables_criticas.append("‚úÖ MARCO INSTITUCIONAL: Instituciones identificadas")
    else:
        variables_criticas.append("‚ö†Ô∏è MARCO INSTITUCIONAL: Verificar instituciones")
    
    # Mostrar an√°lisis
    print()
    for variable in variables_criticas:
        print(f"   {variable}")
    
    # Reality Filter Warnings
    print("\nüö® REALITY FILTER - ADVERTENCIAS CR√çTICAS:")
    
    reality_warnings = [
        "üî¥ INFLACI√ìN ACUMULADA: Calcular impacto 5 a√±os (2025-2029)",
        "üî¥ INCERTIDUMBRE TEMPORAL: Proyecciones a√±os 2027-2029 alta incertidumbre",  
        "üî¥ CONTEXTO URUGUAYO: Considerar dependencia commodities y vecinos",
        "üî¥ SOSTENIBILIDAD FISCAL: Analizar ratio deuda/PIB realista",
        "üî¥ CAPACIDAD EJECUCI√ìN: Evaluar viabilidad implementaci√≥n quinquenal"
    ]
    
    for warning in reality_warnings:
        print(f"   {warning}")
    
    # Recomendaciones espec√≠ficas
    print("\nüìã RECOMENDACIONES ENHANCED FRAMEWORK v3.0:")
    
    recommendations = [
        "",
        "1. AJUSTE INFLACI√ìN OBLIGATORIO:",
        "   ‚Ä¢ Usar deflactor BCU (meta 3-7% anual)",
        "   ‚Ä¢ Calcular inflaci√≥n acumulada 2025-2029", 
        "   ‚Ä¢ Expresar todo en pesos constantes enero 2025",
        "",
        "2. AN√ÅLISIS TEMPORAL DIN√ÅMICO:",
        "   ‚Ä¢ A√±os 2025-2026: Proyecciones m√°s confiables",
        "   ‚Ä¢ A√±os 2027-2029: Incluir m√°rgenes incertidumbre",
        "   ‚Ä¢ Comparar con series hist√≥ricas uruguayas",
        "",
        "3. CONTEXTO ECON√ìMICO ESPEC√çFICO:",
        "   ‚Ä¢ Precio soja/carne (exports clave Uruguay)", 
        "   ‚Ä¢ Crecimiento Argentina/Brasil (socios comerciales)",
        "   ‚Ä¢ Tipo cambio real (competitividad)",
        "   ‚Ä¢ Restricciones balance pagos",
        "",
        "4. VARIABLES CR√çTICAS MONITOREO:",
        "   ‚Ä¢ Gasto p√∫blico como % PIB",
        "   ‚Ä¢ Inversi√≥n p√∫blica sostenibilidad",
        "   ‚Ä¢ D√©ficit/super√°vit fiscal realista", 
        "   ‚Ä¢ Deuda p√∫blica trayectoria"
    ]
    
    for rec in recommendations:
        print(rec)
    
    # Evaluaci√≥n general
    has_inflation = any('inflaci√≥n' in var.lower() for var in variables_criticas)
    has_period = '2025-2029' in str(content)
    
    print(f"\nüèÜ EVALUACI√ìN GENERAL:")
    if not has_inflation:
        assessment = "üö® CR√çTICO: Sin mecanismo ajuste inflaci√≥n - An√°lisis temporal inv√°lido"
    elif len(content['budget_figures']) < 3:
        assessment = "‚ö†Ô∏è LIMITADO: Pocas cifras detectadas - Requiere an√°lisis m√°s profundo"
    else:
        assessment = "‚úÖ ANALIZABLE: Documento viable para an√°lisis con Reality Filter"
    
    print(f"   {assessment}")
    
    # Guardar resumen
    summary = {
        'document': 'Presupuesto Nacional Uruguay 2025-2029',
        'analysis_date': datetime.now().isoformat(),
        'pages_processed': content['processed_pages'],
        'total_pages': content['total_pages'],
        'variables_detected': variables_criticas,
        'reality_warnings': reality_warnings,
        'assessment': assessment,
        'key_figures_sample': content['budget_figures'][:10],
        'key_articles_sample': content['key_articles'][:5]
    }
    
    with open('/home/user/webapp/uruguay_budget_quick_analysis.json', 'w', encoding='utf-8') as f:
        json.dump(summary, f, indent=2, ensure_ascii=False, default=str)
    
    print(f"\nüíæ An√°lisis guardado en: uruguay_budget_quick_analysis.json")
    
    # Guardar muestra de contenido
    with open('/home/user/webapp/uruguay_budget_sample_content.txt', 'w', encoding='utf-8') as f:
        f.write("# PRESUPUESTO NACIONAL URUGUAY 2025-2029 - MUESTRA CONTENIDO\n\n")
        f.write(f"P√°ginas analizadas: {content['processed_pages']}/{content['total_pages']}\n\n")
        f.write("## ART√çCULOS DETECTADOS:\n")
        for art in content['key_articles'][:10]:
            f.write(f"- {art}\n")
        f.write("\n## CIFRAS DETECTADAS:\n")
        for fig in content['budget_figures'][:15]:
            f.write(f"- {fig}\n")
        f.write(f"\n## MUESTRA TEXTO (Primeras p√°ginas):\n\n")
        f.write(content['sample_text'][:3000])
        f.write("\n\n[... contenido truncado para an√°lisis r√°pido ...]")
    
    print(f"üìÑ Muestra contenido guardada en: uruguay_budget_sample_content.txt")
    
    return summary

if __name__ == "__main__":
    analyze_uruguay_budget_quick()